#include "../src/include/Interpolation.hpp"

#include <algorithm>
#include <iostream>
#include <iterator>

using namespace std;

int main() {
    vector<double> f{{0.905515, 0.894638, -0.433134, 0.43131, -0.131052,
                      0.262974, 0.423888, -0.562671, -0.915567, -0.261017,
                      -0.47915, -0.00939326, -0.445962}};
    InterpolationFunction<double> interp(
        3, std::make_pair(0., (double)(f.size() - 1)), f.begin(), f.end());

    // Values pre-computed by MMA
    auto val = {0.905515,
                1.2926721067560611,
                1.4378328090080814,
                1.3883272578820713,
                1.1914856045040405,
                0.894638,
                0.5451145954959586,
                0.19024554211792863,
                -0.12263900900808183,
                -0.3462089067560609,
                -0.43313399999999985,
                -0.3553414007398976,
                -0.16178727347979593,
                0.07931495415025537,
                0.29975185452020425,
                0.43130999999999997,
                0.42577995146363273,
                0.31496822380125494,
                0.1506853204070615,
                -0.015258255324754954,
                -0.13105199999999992,
                -0.15762637311463262,
                -0.10687568572522435,
                -0.0034352117785002127,
                0.12805977477881614,
                0.26297400000000004,
                0.3790505009948983,
                0.4635455590996433,
                0.5060937667069392,
                0.49632971620949023,
                0.42388800000000004,
                0.28383204113504024,
                0.09294058532665175,
                -0.12657879104925598,
                -0.3525185116167764,
                -0.5626710000000001,
                -0.7373583375350591,
                -0.8670212364062518,
                -0.9446300665099139,
                -0.9631551977423841,
                -0.9155670000000002,
                -0.8014048669948036,
                -0.6464842877016469,
                -0.4831897749110898,
                -0.3439058414136876,
                -0.261017,
                -0.2561333064857288,
                -0.30776698878716124,
                -0.38365581784572883,
                -0.4515375646028646,
                -0.4791500000000001,
                -0.4432340851422816,
                -0.35654354178970815,
                -0.24083528186599512,
                -0.11786621729485386,
                -0.009393259999999994,
                0.06282667809485411,
                0.07703668506599487,
                0.011479848989708663,
                -0.15560074205771945,
                -0.445962};

    cout << "\nInterpolation Test:\n";
    double d = 0;
    auto iter = val.begin();
    for (double x = 0.; x < (double)(f.size() - 1); x += 0.2, ++iter) {
        const double f = interp(x);
        d += (f - *iter) * (f - *iter);
        cout << x << " " << f << '\n';
    }
    return std::sqrt(d / val.size()) < 1e-14 ? 0 : 1;
}